<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbSettings.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        jprhl+MLFvwHNqxSZGEDXRAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnChangeInfo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnDeleteUser.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>